



THIS DOESN'T WORK!!!!!!

NAME = push_swap

CC = cc
CFLAGS = -Wall -Wextra -Werror

SRC_DIR = src
OBJ_DIR = obj
TEST_DIR = test
TEST_OBJ_DIR = test_obj

SRC = $(wildcard $(SRC_DIR)/*.c)
OBJ = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRC))

TEST_SRC = $(wildcard $(TEST_DIR)/*.c) $(wildcard $(SRC_DIR)/*.c)



INCLUDES = -I headers

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c libft
	@cp ./libft/headers/libft.h ./headers/libft.h
	@cp ./libft/libft.a ./libft.a
	@mkdir -p $(OBJ_DIR)
	@$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

$(TEST_OBJ_DIR)/%.o: $(TEST_SRC)/%.c libft
	@cp ./libft/headers/libft.h ./headers/libft.h
	@cp ./libft/libft.a ./libft.a
	@mkdir -p $(TEST_OBJ_DIR)
	@$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

$(NAME): $(OBJ)
	@$(CC) $(OBJ) ./libft.a -o $(NAME)

all: $(NAME)

libft:
	$(MAKE) -C ./libft

fclean: clean
	@rm -f $(NAME)
	@rm ./headers/libft.h
	@rm ./libft.a
	@$(MAKE) fclean -C ./libft
	
clean:
	@rm -f $(OBJ) $(TEST_OBJ)

test:
	$(CC) $(CFLAGS) $(filter-out $(OBJ_DIR)/push_swap.o, $(OBJ)) $(OBJ_DIR)/test_main.o ./libft.a $(INCLUDES) -o test.out

debug:
	$(CC) $(CFLAGS) $(filter-out $(OBJ_DIR)/push_swap.o, $(OBJ)) $(OBJ_DIR)/test_main.o ./libft.a -g $(INCLUDES) -o debug.out

re: fclean all

.PHONY: all clean fclean libft re test
